//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace supp_in.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private MySoapHeader mySoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetPoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PoQrDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback PoQrOperationCompleted;
        
        private System.Threading.SendOrPostCallback PoQr_qxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRDlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRdDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRDlist2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRkdEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback RdstatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWxhOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUinfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Ddl_ZtOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::supp_in.Properties.Settings.Default.supp_in_WebReference_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public MySoapHeader MySoapHeaderValue {
            get {
                return this.mySoapHeaderValueField;
            }
            set {
                this.mySoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPoListCompletedEventHandler GetPoListCompleted;
        
        /// <remarks/>
        public event PoQrDetailCompletedEventHandler PoQrDetailCompleted;
        
        /// <remarks/>
        public event PoQrCompletedEventHandler PoQrCompleted;
        
        /// <remarks/>
        public event PoQr_qxCompletedEventHandler PoQr_qxCompleted;
        
        /// <remarks/>
        public event GetRDlistCompletedEventHandler GetRDlistCompleted;
        
        /// <remarks/>
        public event GetRdDetailsCompletedEventHandler GetRdDetailsCompleted;
        
        /// <remarks/>
        public event GetRDlist2CompletedEventHandler GetRDlist2Completed;
        
        /// <remarks/>
        public event GetRkdEventCompletedEventHandler GetRkdEventCompleted;
        
        /// <remarks/>
        public event RdstatusCompletedEventHandler RdstatusCompleted;
        
        /// <remarks/>
        public event UpdateWxhCompletedEventHandler UpdateWxhCompleted;
        
        /// <remarks/>
        public event UpdatePwdCompletedEventHandler UpdatePwdCompleted;
        
        /// <remarks/>
        public event GetUinfoCompletedEventHandler GetUinfoCompleted;
        
        /// <remarks/>
        public event GetNewsListCompletedEventHandler GetNewsListCompleted;
        
        /// <remarks/>
        public event GetNewsDetailCompletedEventHandler GetNewsDetailCompleted;
        
        /// <remarks/>
        public event GetFilesCompletedEventHandler GetFilesCompleted;
        
        /// <remarks/>
        public event Ddl_ZtCompletedEventHandler Ddl_ZtCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPoList(string strFactory, string strYear, string strSdate, string strEdate, string strVencode, string strCzy, string strStatus) {
            object[] results = this.Invoke("GetPoList", new object[] {
                        strFactory,
                        strYear,
                        strSdate,
                        strEdate,
                        strVencode,
                        strCzy,
                        strStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPoListAsync(string strFactory, string strYear, string strSdate, string strEdate, string strVencode, string strCzy, string strStatus) {
            this.GetPoListAsync(strFactory, strYear, strSdate, strEdate, strVencode, strCzy, strStatus, null);
        }
        
        /// <remarks/>
        public void GetPoListAsync(string strFactory, string strYear, string strSdate, string strEdate, string strVencode, string strCzy, string strStatus, object userState) {
            if ((this.GetPoListOperationCompleted == null)) {
                this.GetPoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPoListOperationCompleted);
            }
            this.InvokeAsync("GetPoList", new object[] {
                        strFactory,
                        strYear,
                        strSdate,
                        strEdate,
                        strVencode,
                        strCzy,
                        strStatus}, this.GetPoListOperationCompleted, userState);
        }
        
        private void OnGetPoListOperationCompleted(object arg) {
            if ((this.GetPoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPoListCompleted(this, new GetPoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PoQrDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PoQrDetail(string strId, string strBz, string strQrArriveDate, string strQrIquantity) {
            object[] results = this.Invoke("PoQrDetail", new object[] {
                        strId,
                        strBz,
                        strQrArriveDate,
                        strQrIquantity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PoQrDetailAsync(string strId, string strBz, string strQrArriveDate, string strQrIquantity) {
            this.PoQrDetailAsync(strId, strBz, strQrArriveDate, strQrIquantity, null);
        }
        
        /// <remarks/>
        public void PoQrDetailAsync(string strId, string strBz, string strQrArriveDate, string strQrIquantity, object userState) {
            if ((this.PoQrDetailOperationCompleted == null)) {
                this.PoQrDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPoQrDetailOperationCompleted);
            }
            this.InvokeAsync("PoQrDetail", new object[] {
                        strId,
                        strBz,
                        strQrArriveDate,
                        strQrIquantity}, this.PoQrDetailOperationCompleted, userState);
        }
        
        private void OnPoQrDetailOperationCompleted(object arg) {
            if ((this.PoQrDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PoQrDetailCompleted(this, new PoQrDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PoQr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PoQr(string strId, string strBz, string strFactory, string strYear, string strUserCode) {
            object[] results = this.Invoke("PoQr", new object[] {
                        strId,
                        strBz,
                        strFactory,
                        strYear,
                        strUserCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PoQrAsync(string strId, string strBz, string strFactory, string strYear, string strUserCode) {
            this.PoQrAsync(strId, strBz, strFactory, strYear, strUserCode, null);
        }
        
        /// <remarks/>
        public void PoQrAsync(string strId, string strBz, string strFactory, string strYear, string strUserCode, object userState) {
            if ((this.PoQrOperationCompleted == null)) {
                this.PoQrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPoQrOperationCompleted);
            }
            this.InvokeAsync("PoQr", new object[] {
                        strId,
                        strBz,
                        strFactory,
                        strYear,
                        strUserCode}, this.PoQrOperationCompleted, userState);
        }
        
        private void OnPoQrOperationCompleted(object arg) {
            if ((this.PoQrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PoQrCompleted(this, new PoQrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PoQr_qx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PoQr_qx(string strId, string strFactory, string strYear, string strUserCode) {
            object[] results = this.Invoke("PoQr_qx", new object[] {
                        strId,
                        strFactory,
                        strYear,
                        strUserCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PoQr_qxAsync(string strId, string strFactory, string strYear, string strUserCode) {
            this.PoQr_qxAsync(strId, strFactory, strYear, strUserCode, null);
        }
        
        /// <remarks/>
        public void PoQr_qxAsync(string strId, string strFactory, string strYear, string strUserCode, object userState) {
            if ((this.PoQr_qxOperationCompleted == null)) {
                this.PoQr_qxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPoQr_qxOperationCompleted);
            }
            this.InvokeAsync("PoQr_qx", new object[] {
                        strId,
                        strFactory,
                        strYear,
                        strUserCode}, this.PoQr_qxOperationCompleted, userState);
        }
        
        private void OnPoQr_qxOperationCompleted(object arg) {
            if ((this.PoQr_qxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PoQr_qxCompleted(this, new PoQr_qxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRDlist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRDlist(string strFactory, string strYear, string strSdate, string strEdate, string strVencode, string strCzy, string strStatus) {
            object[] results = this.Invoke("GetRDlist", new object[] {
                        strFactory,
                        strYear,
                        strSdate,
                        strEdate,
                        strVencode,
                        strCzy,
                        strStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRDlistAsync(string strFactory, string strYear, string strSdate, string strEdate, string strVencode, string strCzy, string strStatus) {
            this.GetRDlistAsync(strFactory, strYear, strSdate, strEdate, strVencode, strCzy, strStatus, null);
        }
        
        /// <remarks/>
        public void GetRDlistAsync(string strFactory, string strYear, string strSdate, string strEdate, string strVencode, string strCzy, string strStatus, object userState) {
            if ((this.GetRDlistOperationCompleted == null)) {
                this.GetRDlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRDlistOperationCompleted);
            }
            this.InvokeAsync("GetRDlist", new object[] {
                        strFactory,
                        strYear,
                        strSdate,
                        strEdate,
                        strVencode,
                        strCzy,
                        strStatus}, this.GetRDlistOperationCompleted, userState);
        }
        
        private void OnGetRDlistOperationCompleted(object arg) {
            if ((this.GetRDlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRDlistCompleted(this, new GetRDlistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRdDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRdDetails(string strFactory, string strYear, string strCcode) {
            object[] results = this.Invoke("GetRdDetails", new object[] {
                        strFactory,
                        strYear,
                        strCcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRdDetailsAsync(string strFactory, string strYear, string strCcode) {
            this.GetRdDetailsAsync(strFactory, strYear, strCcode, null);
        }
        
        /// <remarks/>
        public void GetRdDetailsAsync(string strFactory, string strYear, string strCcode, object userState) {
            if ((this.GetRdDetailsOperationCompleted == null)) {
                this.GetRdDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRdDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRdDetails", new object[] {
                        strFactory,
                        strYear,
                        strCcode}, this.GetRdDetailsOperationCompleted, userState);
        }
        
        private void OnGetRdDetailsOperationCompleted(object arg) {
            if ((this.GetRdDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRdDetailsCompleted(this, new GetRdDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRDlist2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRDlist2(string strFactory, string strYear, string strSdate, string strEdate, string strVencode, string strCzy, string strStatus) {
            object[] results = this.Invoke("GetRDlist2", new object[] {
                        strFactory,
                        strYear,
                        strSdate,
                        strEdate,
                        strVencode,
                        strCzy,
                        strStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRDlist2Async(string strFactory, string strYear, string strSdate, string strEdate, string strVencode, string strCzy, string strStatus) {
            this.GetRDlist2Async(strFactory, strYear, strSdate, strEdate, strVencode, strCzy, strStatus, null);
        }
        
        /// <remarks/>
        public void GetRDlist2Async(string strFactory, string strYear, string strSdate, string strEdate, string strVencode, string strCzy, string strStatus, object userState) {
            if ((this.GetRDlist2OperationCompleted == null)) {
                this.GetRDlist2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRDlist2OperationCompleted);
            }
            this.InvokeAsync("GetRDlist2", new object[] {
                        strFactory,
                        strYear,
                        strSdate,
                        strEdate,
                        strVencode,
                        strCzy,
                        strStatus}, this.GetRDlist2OperationCompleted, userState);
        }
        
        private void OnGetRDlist2OperationCompleted(object arg) {
            if ((this.GetRDlist2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRDlist2Completed(this, new GetRDlist2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRkdEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRkdEvent(string strFactory, string strYear, string strMainId) {
            object[] results = this.Invoke("GetRkdEvent", new object[] {
                        strFactory,
                        strYear,
                        strMainId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRkdEventAsync(string strFactory, string strYear, string strMainId) {
            this.GetRkdEventAsync(strFactory, strYear, strMainId, null);
        }
        
        /// <remarks/>
        public void GetRkdEventAsync(string strFactory, string strYear, string strMainId, object userState) {
            if ((this.GetRkdEventOperationCompleted == null)) {
                this.GetRkdEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRkdEventOperationCompleted);
            }
            this.InvokeAsync("GetRkdEvent", new object[] {
                        strFactory,
                        strYear,
                        strMainId}, this.GetRkdEventOperationCompleted, userState);
        }
        
        private void OnGetRkdEventOperationCompleted(object arg) {
            if ((this.GetRkdEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRkdEventCompleted(this, new GetRkdEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Rdstatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Rdstatus() {
            object[] results = this.Invoke("Rdstatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RdstatusAsync() {
            this.RdstatusAsync(null);
        }
        
        /// <remarks/>
        public void RdstatusAsync(object userState) {
            if ((this.RdstatusOperationCompleted == null)) {
                this.RdstatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRdstatusOperationCompleted);
            }
            this.InvokeAsync("Rdstatus", new object[0], this.RdstatusOperationCompleted, userState);
        }
        
        private void OnRdstatusOperationCompleted(object arg) {
            if ((this.RdstatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RdstatusCompleted(this, new RdstatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWxh", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateWxh(string strUserCode, string strWxh, string strMobile) {
            object[] results = this.Invoke("UpdateWxh", new object[] {
                        strUserCode,
                        strWxh,
                        strMobile});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWxhAsync(string strUserCode, string strWxh, string strMobile) {
            this.UpdateWxhAsync(strUserCode, strWxh, strMobile, null);
        }
        
        /// <remarks/>
        public void UpdateWxhAsync(string strUserCode, string strWxh, string strMobile, object userState) {
            if ((this.UpdateWxhOperationCompleted == null)) {
                this.UpdateWxhOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWxhOperationCompleted);
            }
            this.InvokeAsync("UpdateWxh", new object[] {
                        strUserCode,
                        strWxh,
                        strMobile}, this.UpdateWxhOperationCompleted, userState);
        }
        
        private void OnUpdateWxhOperationCompleted(object arg) {
            if ((this.UpdateWxhCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWxhCompleted(this, new UpdateWxhCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePwd(string strUserCode, string strPwd) {
            object[] results = this.Invoke("UpdatePwd", new object[] {
                        strUserCode,
                        strPwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePwdAsync(string strUserCode, string strPwd) {
            this.UpdatePwdAsync(strUserCode, strPwd, null);
        }
        
        /// <remarks/>
        public void UpdatePwdAsync(string strUserCode, string strPwd, object userState) {
            if ((this.UpdatePwdOperationCompleted == null)) {
                this.UpdatePwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePwdOperationCompleted);
            }
            this.InvokeAsync("UpdatePwd", new object[] {
                        strUserCode,
                        strPwd}, this.UpdatePwdOperationCompleted, userState);
        }
        
        private void OnUpdatePwdOperationCompleted(object arg) {
            if ((this.UpdatePwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePwdCompleted(this, new UpdatePwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUinfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUinfo(string strFactory, string strYear, string strUserCode, string strWxh, string strMobile, string strPwd) {
            object[] results = this.Invoke("GetUinfo", new object[] {
                        strFactory,
                        strYear,
                        strUserCode,
                        strWxh,
                        strMobile,
                        strPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUinfoAsync(string strFactory, string strYear, string strUserCode, string strWxh, string strMobile, string strPwd) {
            this.GetUinfoAsync(strFactory, strYear, strUserCode, strWxh, strMobile, strPwd, null);
        }
        
        /// <remarks/>
        public void GetUinfoAsync(string strFactory, string strYear, string strUserCode, string strWxh, string strMobile, string strPwd, object userState) {
            if ((this.GetUinfoOperationCompleted == null)) {
                this.GetUinfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUinfoOperationCompleted);
            }
            this.InvokeAsync("GetUinfo", new object[] {
                        strFactory,
                        strYear,
                        strUserCode,
                        strWxh,
                        strMobile,
                        strPwd}, this.GetUinfoOperationCompleted, userState);
        }
        
        private void OnGetUinfoOperationCompleted(object arg) {
            if ((this.GetUinfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUinfoCompleted(this, new GetUinfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewsList(string strFactory, string strYear, string strUserCode, string strRole) {
            object[] results = this.Invoke("GetNewsList", new object[] {
                        strFactory,
                        strYear,
                        strUserCode,
                        strRole});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsListAsync(string strFactory, string strYear, string strUserCode, string strRole) {
            this.GetNewsListAsync(strFactory, strYear, strUserCode, strRole, null);
        }
        
        /// <remarks/>
        public void GetNewsListAsync(string strFactory, string strYear, string strUserCode, string strRole, object userState) {
            if ((this.GetNewsListOperationCompleted == null)) {
                this.GetNewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsListOperationCompleted);
            }
            this.InvokeAsync("GetNewsList", new object[] {
                        strFactory,
                        strYear,
                        strUserCode,
                        strRole}, this.GetNewsListOperationCompleted, userState);
        }
        
        private void OnGetNewsListOperationCompleted(object arg) {
            if ((this.GetNewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsListCompleted(this, new GetNewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewsDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewsDetail(string strId) {
            object[] results = this.Invoke("GetNewsDetail", new object[] {
                        strId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsDetailAsync(string strId) {
            this.GetNewsDetailAsync(strId, null);
        }
        
        /// <remarks/>
        public void GetNewsDetailAsync(string strId, object userState) {
            if ((this.GetNewsDetailOperationCompleted == null)) {
                this.GetNewsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsDetailOperationCompleted);
            }
            this.InvokeAsync("GetNewsDetail", new object[] {
                        strId}, this.GetNewsDetailOperationCompleted, userState);
        }
        
        private void OnGetNewsDetailOperationCompleted(object arg) {
            if ((this.GetNewsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsDetailCompleted(this, new GetNewsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFiles(string strId) {
            object[] results = this.Invoke("GetFiles", new object[] {
                        strId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilesAsync(string strId) {
            this.GetFilesAsync(strId, null);
        }
        
        /// <remarks/>
        public void GetFilesAsync(string strId, object userState) {
            if ((this.GetFilesOperationCompleted == null)) {
                this.GetFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilesOperationCompleted);
            }
            this.InvokeAsync("GetFiles", new object[] {
                        strId}, this.GetFilesOperationCompleted, userState);
        }
        
        private void OnGetFilesOperationCompleted(object arg) {
            if ((this.GetFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilesCompleted(this, new GetFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ddl_Zt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Ddl_Zt() {
            object[] results = this.Invoke("Ddl_Zt", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Ddl_ZtAsync() {
            this.Ddl_ZtAsync(null);
        }
        
        /// <remarks/>
        public void Ddl_ZtAsync(object userState) {
            if ((this.Ddl_ZtOperationCompleted == null)) {
                this.Ddl_ZtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDdl_ZtOperationCompleted);
            }
            this.InvokeAsync("Ddl_Zt", new object[0], this.Ddl_ZtOperationCompleted, userState);
        }
        
        private void OnDdl_ZtOperationCompleted(object arg) {
            if ((this.Ddl_ZtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Ddl_ZtCompleted(this, new Ddl_ZtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class MySoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passWordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string PassWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPoListCompletedEventHandler(object sender, GetPoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PoQrDetailCompletedEventHandler(object sender, PoQrDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PoQrDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PoQrDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PoQrCompletedEventHandler(object sender, PoQrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PoQrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PoQrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PoQr_qxCompletedEventHandler(object sender, PoQr_qxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PoQr_qxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PoQr_qxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRDlistCompletedEventHandler(object sender, GetRDlistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRDlistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRDlistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRdDetailsCompletedEventHandler(object sender, GetRdDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRdDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRdDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRDlist2CompletedEventHandler(object sender, GetRDlist2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRDlist2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRDlist2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRkdEventCompletedEventHandler(object sender, GetRkdEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRkdEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRkdEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RdstatusCompletedEventHandler(object sender, RdstatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RdstatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RdstatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateWxhCompletedEventHandler(object sender, UpdateWxhCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWxhCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWxhCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePwdCompletedEventHandler(object sender, UpdatePwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUinfoCompletedEventHandler(object sender, GetUinfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUinfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUinfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetNewsListCompletedEventHandler(object sender, GetNewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetNewsDetailCompletedEventHandler(object sender, GetNewsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetFilesCompletedEventHandler(object sender, GetFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Ddl_ZtCompletedEventHandler(object sender, Ddl_ZtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Ddl_ZtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Ddl_ZtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591